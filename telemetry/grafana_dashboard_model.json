{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "ESP32",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 15940,
  "graphTooltip": 0,
  "id": 16,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 100,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 900000,
            "lineInterpolation": "linear",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#888888",
                "value": null
              },
              {
                "color": "#3e5430",
                "value": 100
              },
              {
                "color": "#348c28",
                "value": 200
              },
              {
                "color": "#36c823",
                "value": 250
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "std_plus"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.showPoints",
                "value": "never"
              },
              {
                "id": "custom.fillBelowTo",
                "value": "val"
              },
              {
                "id": "displayName",
                "value": "Growth + 1SD"
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "std_minus"
            },
            "properties": [
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.showPoints",
                "value": "never"
              },
              {
                "id": "displayName",
                "value": "Growth - 1SD"
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true,
                  "tooltip": false,
                  "viz": false
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "val"
            },
            "properties": [
              {
                "id": "custom.fillBelowTo",
                "value": "std_minus"
              },
              {
                "id": "displayName",
                "value": "Growth"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"rise\")\r\n  |> filter(fn: (r) => r.device == \"$selected_device\")\r\n  |> filter(fn: (r) => r._field == \"height\" or r._field == \"height_std\" or r._field == \"start_calib\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n    _time: r._time,\r\n    std_plus: r.height + r.height_std / 6.7 / r.start_calib * 100.0,\r\n    val: r.height,\r\n    std_minus: r.height - r.height_std / 6.7 / r.start_calib * 100.0\r\n   }))\r\n",
          "refId": "A"
        }
      ],
      "title": "Growth",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": "grafanacloud-ml-metrics",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "growth_forecast:predicted{device=\"ESP32-S2\", ml_algorithm=\"grafana_prophet_1_0_1\", ml_forecast=\"yhat\", ml_job_id=\"67ed7ae6-0a7c-4e94-8973-7e44850e6cac\", ml_job_metric=\"growth_forecast\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Predicted"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "growth_forecast:predicted{device=\"ESP32-S2\", ml_algorithm=\"grafana_prophet_1_0_1\", ml_forecast=\"yhat_lower\", ml_job_id=\"67ed7ae6-0a7c-4e94-8973-7e44850e6cac\", ml_job_metric=\"growth_forecast\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Predicted (lower)"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "growth_forecast:predicted{device=\"ESP32-S2\", ml_algorithm=\"grafana_prophet_1_0_1\", ml_forecast=\"yhat_upper\", ml_job_id=\"67ed7ae6-0a7c-4e94-8973-7e44850e6cac\", ml_job_metric=\"growth_forecast\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Predicted (upper)"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 0
              },
              {
                "id": "custom.fillBelowTo",
                "value": "Predicted (lower)"
              },
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "growth_forecast:actual{device=\"ESP32-S2\", ml_algorithm=\"grafana_prophet_1_0_1\", ml_forecast=\"y\", ml_job_id=\"67ed7ae6-0a7c-4e94-8973-7e44850e6cac\", ml_job_metric=\"growth_forecast\"}"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Actual"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 41,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "expr": "growth_forecast:predicted",
          "queryType": "metric",
          "refId": "P"
        },
        {
          "expr": "growth_forecast:actual",
          "queryType": "metric",
          "refId": "A"
        }
      ],
      "title": "Growth Forecast",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 28,
            "axisSoftMin": 18,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed+area"
            }
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "red",
                "value": 35
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Environment"
            },
            "properties": [
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 1
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 10,
        "x": 0,
        "y": 7
      },
      "id": 30,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"rise\")\r\n  |> filter(fn: (r) => r._field == \"temp_in\" or r._field == \"temp_out\")\r\n  |> filter(fn: (r) => r.device == \"$selected_device\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n    _time: r._time,\r\n    Inside: r.temp_in,\r\n    Environment: r.temp_out\r\n    }))",
          "refId": "A"
        }
      ],
      "title": "Temperature",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlYlRd"
          },
          "mappings": [],
          "max": 40,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "dark-blue",
                "value": 20
              },
              {
                "color": "#6ED0E0",
                "value": 30
              },
              {
                "color": "#EAB839",
                "value": 40
              },
              {
                "color": "red",
                "value": 50
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 2,
        "x": 10,
        "y": 7
      },
      "id": 16,
      "options": {
        "displayMode": "lcd",
        "maxVizHeight": 300,
        "minVizHeight": 75,
        "minVizWidth": 96,
        "namePlacement": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "sizing": "auto",
        "text": {
          "valueSize": 30
        },
        "valueMode": "color"
      },
      "pluginVersion": "10.3.0-64399",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
          },
          "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"rise\")\n  |> filter(fn: (r) => r._field == \"temp_in\")\n  |> filter(fn: (r) => r.device == \"$selected_device\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean)",
          "refId": "A"
        }
      ],
      "title": "Temp",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 14,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 3,
            "pointSize": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Temperature"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-BlYlRd"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 1
              },
              {
                "id": "custom.pointSize",
                "value": 5
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "unit",
                "value": "celsius"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 7
      },
      "id": 42,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"rise\")\r\n  |> filter(fn: (r) => r.device == \"$selected_device\")\r\n  |> filter(fn: (r) => r._field == \"temp_in\" or r._field == \"height\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n    _time: r._time,\r\n    Temperature: r.temp_in,\r\n    Growth: r.height\r\n    }))",
          "refId": "A"
        }
      ],
      "title": "Growth / Temp",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dB"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 14
      },
      "id": 40,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.3.0-64399",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"rise\")\r\n  |> filter(fn: (r) => r.device == \"$selected_device\")\r\n  |> filter(fn: (r) => r._field == \"wifi_rssi\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Wi-Fi Power",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 14
      },
      "id": 39,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.3.0-64399",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"rise\")\r\n  |> filter(fn: (r) => r.device == \"$selected_device\")\r\n  |> filter(fn: (r) => r._field == \"battery_level\")",
          "refId": "A"
        }
      ],
      "title": "Battery level",
      "type": "stat"
    }
  ],
  "refresh": false,
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "ESP32-S2",
          "value": "ESP32-S2"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "e5144b85-b5f5-40fd-9390-dc618642fded"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementTagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"device\",\r\n  measurement: \"rise\",\r\n  start: -2d,\r\n  stop: now()\r\n)",
        "hide": 0,
        "includeAll": false,
        "label": "Device",
        "multi": false,
        "name": "selected_device",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementTagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"device\",\r\n  measurement: \"rise\",\r\n  start: -2d,\r\n  stop: now()\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2023-12-30T16:49:50.384Z",
    "to": "2023-12-31T12:40:40.503Z"
  },
  "timepicker": {
    "hidden": false,
    "refresh_intervals": [
      "3m"
    ]
  },
  "timezone": "",
  "title": "Sourdough Montoring",
  "uid": "-QFQnIP7k",
  "version": 28,
  "weekStart": ""
}